{"pageProps":{"source":{"compiledSource":"var u=Object.defineProperty,m=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var n=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var s=(a,t,r)=>t in a?u(a,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):a[t]=r,e=(a,t)=>{for(var r in t||(t={}))i.call(t,r)&&s(a,r,t[r]);if(n)for(var r of n(t))p.call(t,r)&&s(a,r,t[r]);return a},l=(a,t)=>m(a,h(t));var c=(a,t)=>{var r={};for(var o in a)i.call(a,o)&&t.indexOf(o)<0&&(r[o]=a[o]);if(a!=null&&n)for(var o of n(a))t.indexOf(o)<0&&p.call(a,o)&&(r[o]=a[o]);return r};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(r){var o=r,{components:a}=o,t=c(o,[\"components\"]);return mdx(MDXLayout,l(e(e({},layoutProps),t),{components:a,mdxType:\"MDXLayout\"}),mdx(\"hr\",null),mdx(\"h3\",e({},{id:\"server-requirements\"}),\"Server requirements\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"PHP >= 7.2\"),mdx(\"li\",{parentName:\"ul\"},\"Laravel >= 5.5\")),mdx(\"p\",null,\"To verify what version of PHP is installed on your server run this command in your terminal: \",mdx(\"strong\",{parentName:\"p\"},\"php -v\")),mdx(\"p\",null,\"To know what is the Laravel version behind your application run this command in your application's main directory: \",mdx(\"strong\",{parentName:\"p\"},\"php artisan --version\")),mdx(\"h3\",e({},{id:\"clear-the-laravel-configuration\"}),\"Clear the Laravel configuration\"),mdx(\"p\",null,\"Before installing the package you should clear your Laravel configuration to avoid unexpected error loading the default package config file.\"),mdx(\"p\",null,\"Run the command below to clear your cached configuration:\"),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"php artisan config:clear\")),mdx(\"h3\",e({},{id:\"install\"}),\"Install\"),mdx(\"p\",null,\"Type the command below in your terminal to install the latest version of the package:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-php\"}),`composer require ingress-it-solutions/ultimate-laravel\n`)),mdx(\"h3\",e({},{id:\"for-lumen\"}),\"For Lumen\"),mdx(\"p\",null,\"If your application is based on Lumen you need to manually register the UltimateServiceProvider:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-php\"}),`$app->register(\\\\Ultimate\\\\Laravel\\\\UltimateServiceProvider::class);\n`)),mdx(\"p\",null,\"If you wish to use the \\\\Ultimate\\\\Laravel\\\\Facades\\\\Ultimate facade, you should also enable facades if you did not already by uncommenting the withFacades() call in bootstrap/app.php:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-php\"}),`$app->withFacades();\n`)),mdx(\"h3\",e({},{id:\"configure-the-ingestion-key\"}),\"Configure the Ingestion Key\"),mdx(\"p\",null,\"Get a new Ingestion Key by signing up for Palzin APM (\",mdx(\"a\",e({parentName:\"p\"},{href:\"https://app.ultimate.dev/register\",target:\"_blank\",rel:\"nofollow noopener noreferrer\"}),\"https://app.ultimate.dev/register\"),\") and creating a new application.\"),mdx(\"p\",null,\"Put the Palzin APM Ingestion Key in your environment file:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-php\"}),`ULTIMATE_INGESTION_KEY=[ingestion key]\n`)),mdx(\"h3\",e({},{id:\"test-everything-is-working\"}),\"Test everything is working\"),mdx(\"p\",null,\"Execute the test command to check if your app can send data to Palzin APM correctly:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-php\"}),`php artisan ultimate:test\n`)),mdx(\"p\",null,\"Go to \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.palzin.app/\",target:\"_blank\",rel:\"nofollow noopener noreferrer\"}),\"https://www.palzin.app/\"),\" to explore your data.\"),mdx(\"p\",null,\"By default Palzin APM will monitor everything executed in background:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Queued Jobs\"),mdx(\"li\",{parentName:\"ul\"},\"Artisan commands\"),mdx(\"li\",{parentName:\"ul\"},\"Unhandled Exceptions\")),mdx(\"p\",e({},{className:\"hint tip\"}),\"If you want learn more about background jobs monitoring take a look on our article: \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.palzin.app/laravel-background-jobs-commands-monitoring-with-ultimate/\",target:\"_blank\",rel:\"nofollow noopener noreferrer\"}),\"https://www.palzin.app/laravel-background-jobs-commands-monitoring-with-ultimate/\")),mdx(\"p\",null,\"Go the \",mdx(\"a\",e({parentName:\"p\"},{href:\"\"}),\"Http Request Monitoring\"),\" section to understand how to trace your application when it's executed due to an incoming http request.\"),mdx(\"h3\",e({},{id:\"reporting-out-of-memory-errors\"}),\"Reporting Out Of Memory Errors\"),mdx(\"p\",null,\"When your app runs out of memory it's needed to temporary increase the PHP memory limit to ensure Palzin APM can report the current transaction. To do this, a \\u201Cbootstrapper\\u201D class must be registered in both the app/Http/Kernel.php and app/Console/Kernel.php files:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-php\"}),`protected function bootstrappers()\n{\n    return array_merge(\n        [\\\\Ultimate\\\\Laravel\\\\OutOfMemoryBootstrapper::class],\n        parent::bootstrappers(),\n    );\n}\n`)),mdx(\"p\",null,\"The OutOfMemoryBootstrapper must be the first registered bootstrapper, or it may not be called before the out of memory exception crashes your app.\"),mdx(\"h2\",e({},{id:\"before-flush-callback\"}),\"Before flush callback\"),mdx(\"p\",null,\"The package allows you to register a callback before data are sent to the remote platform. Paste the code below in the boot method of your AppServiceProvider:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-php\"}),`use Ultimate\\\\Laravel\\\\Facades\\\\Ultimate;\n\nUltimate::beforeFlush(function ($ultimate) {\n    // Do something before data are sent.\n});\n\n`)),mdx(\"p\",null,\"The callback will receive the current Palzin APM instance as parameter.\"),mdx(\"h3\",e({},{id:\"sampling-a-specific-transaction\"}),\"Sampling a specific transaction\"),mdx(\"p\",null,\"The most common use case for beforeFlush method is sampling. If your application execute a specific transaction for a huge number of times every hour, it could be useful to sample this transasction to mitigate the quota consumption still guaranteeing a good level of detail of the metrics.\"),mdx(\"p\",null,\"In the example below we report only the 70% of the ExampleJob executions:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-php\"}),`<?php\n\nnamespace App\\\\Providers;\n\nuse App\\\\Jobs\\\\ExampleJob;\nuse Illuminate\\\\Support\\\\ServiceProvider;\nuse Ultimate\\\\Laravel\\\\Facades\\\\Ultimate;\n\nclass AppServiceProvider extends ServiceProvider\n{\n    /**\n     * Register any application services.\n     *\n     * @return void\n     */\n    public function register()\n    {\n        //\n    }\n\n    /**\n     * Bootstrap any application services.\n     *\n     * @return void\n     */\n    public function boot()\n    {\n        Ultimate::beforeFlush(function ($ultimate) {\n            if ($ultimate->currentTransaction()->name === ExampleJob::class) {\n                $prob = mt_rand(0, mt_getrandmax() - 1) / mt_getrandmax();\n                \n                return $prob < 0.7; // Report 70% of the executions\n            }\n        });\n    }\n}\n\n`)),mdx(\"h3\",e({},{id:\"set-a-custom-service-name\"}),\"Set a custom service name\"),mdx(\"p\",null,'If your application runs in Kubernates cluster or use \"auto-scaling\" you could see a bit of mess in your charts. It is probably due to the constant turnover of servers to handle the application load dynamically.'),mdx(\"p\",null,\"It may be useful to monitor each autoscaling group with the same name regardless of the hostnames of the servers that are continuously turned on and off.\"),mdx(\"p\",null,\"Using the beforeFlush() method you can group your monitoring data by services (API, workers, web app, etc) instead by hostnames:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-php\"}),`<?php\n\nnamespace App\\\\Providers;\n\nuse App\\\\Jobs\\\\ExampleJob;\nuse Illuminate\\\\Support\\\\ServiceProvider;\nuse Ultimate\\\\Laravel\\\\Facades\\\\Ultimate;\n\nclass AppServiceProvider extends ServiceProvider\n{\n    /**\n     * Register any application services.\n     *\n     * @return void\n     */\n    public function register()\n    {\n        //\n    }\n\n    /**\n     * Bootstrap any application services.\n     *\n     * @return void\n     */\n    public function boot()\n    {\n        Ultimate::beforeFlush(function ($ultimate) {\n            $ultimate->currentTransaction()\n                ->host\n                ->hostname = config('app.service_name')??'rest-api'\n        });\n    }\n}\n`)),mdx(\"p\",null,\"In the example above you can get your service name by a custom configuration property, or alternatively you could create an environment variable. You are free to configure it based also on your CI/CD pipelines.\"),mdx(\"h2\",e({},{id:\"access-the-palzin-apm-instance\"}),\"Access the Palzin APM instance\"),mdx(\"p\",null,\"You can get the current Palzin APM instance using the helper function or the Facade:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-php\"}),`/*\n * Using the helper function\n */\nultimate()->addSegment(function () {\n    // Do something\n}, 'label');\n\n\n\n/*\n * Using the Facade\n */\n\\\\Ultimate\\\\Laravel\\\\Facades\\\\Ultimate::addSegment(function () {\n    // Do something\n}, 'label');\n`)),mdx(\"p\",null,\"The current Palzin APM instance is binded in the Laravel service container. In your controller, you can type-hint an argument with the Ultimate's class name.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-php\"}),`namespace App\\\\Http\\\\Controllers;\n\nuse Illuminate\\\\Http\\\\Request;\nuse Ultimate\\\\Laravel\\\\Ultimate;\n\nclass HomeController extends Controller\n{\n    /**\n     * Show the application dashboard.\n     *\n     * @return \\\\Illuminate\\\\Contracts\\\\Support\\\\Renderable\n     */\n    public function index(Ultimate $ultimate)\n    {\n        return view('home');\n    }\n}\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"part":"Palzin APM","title":"Installation & Set-up","description":"Connect your Laravel application with Ultimate.","tocRaw":[{"content":"Server requirements","slug":"server-requirements","lvl":3,"i":0,"seen":0},{"content":"Clear the Laravel configuration","slug":"clear-the-laravel-configuration","lvl":3,"i":1,"seen":0},{"content":"Install","slug":"install","lvl":3,"i":2,"seen":0},{"content":"For Lumen","slug":"for-lumen","lvl":3,"i":3,"seen":0},{"content":"Configure the Ingestion Key","slug":"configure-the-ingestion-key","lvl":3,"i":4,"seen":0},{"content":"Test everything is working","slug":"test-everything-is-working","lvl":3,"i":5,"seen":0},{"content":"Reporting Out Of Memory Errors","slug":"reporting-out-of-memory-errors","lvl":3,"i":6,"seen":0},{"content":"Before flush callback","slug":"before-flush-callback","lvl":2,"i":7,"seen":0},{"content":"Sampling a specific transaction","slug":"sampling-a-specific-transaction","lvl":3,"i":8,"seen":0},{"content":"Set a custom service name","slug":"set-a-custom-service-name","lvl":3,"i":9,"seen":0},{"content":"Access the Palzin APM instance","slug":"access-the-palzin-apm-instance","lvl":2,"i":10,"seen":0}]}},"frontMatter":{"part":"Palzin APM","title":"Installation & Set-up","description":"Connect your Laravel application with Ultimate.","tocRaw":[{"content":"Server requirements","slug":"server-requirements","lvl":3,"i":0,"seen":0},{"content":"Clear the Laravel configuration","slug":"clear-the-laravel-configuration","lvl":3,"i":1,"seen":0},{"content":"Install","slug":"install","lvl":3,"i":2,"seen":0},{"content":"For Lumen","slug":"for-lumen","lvl":3,"i":3,"seen":0},{"content":"Configure the Ingestion Key","slug":"configure-the-ingestion-key","lvl":3,"i":4,"seen":0},{"content":"Test everything is working","slug":"test-everything-is-working","lvl":3,"i":5,"seen":0},{"content":"Reporting Out Of Memory Errors","slug":"reporting-out-of-memory-errors","lvl":3,"i":6,"seen":0},{"content":"Before flush callback","slug":"before-flush-callback","lvl":2,"i":7,"seen":0},{"content":"Sampling a specific transaction","slug":"sampling-a-specific-transaction","lvl":3,"i":8,"seen":0},{"content":"Set a custom service name","slug":"set-a-custom-service-name","lvl":3,"i":9,"seen":0},{"content":"Access the Palzin APM instance","slug":"access-the-palzin-apm-instance","lvl":2,"i":10,"seen":0}]}},"__N_SSG":true}